<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
#parse('/tcom/template.rap.vm')
<html>
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<title>RAP - Page Tester        </title>
        <link rel="stylesheet" href="${staticRoot}/css/rap.template.css" type="text/css" media="screen">
		<link type="text/css" rel="stylesheet" href="${staticRoot}/css/pageTester.css" />
        <script src="http://yui.yahooapis.com/3.5.1/build/yui/yui-min.js"></script>
        <script src="${staticRoot}/js/util/jsformat.js"></script>
	</head>
	<body>
	    #bodyStart
        <h2>PAGE INFO</h2>
        跟路径：<input id="txtRootPath" type="text" style="width:500px;" value="10.235.160.141:8806$!projectContext/mock/$!projectId"></input> 
        <h2>RESPONSE BOARD</h2>
        <div class="block" id="divResBoard">
            <div id="divResBoardJson">ready</div>
            <div id="divResBoardLog"></div>
            <div class="clear"></div>
        </div>
        <div id="divActionList">
            #foreach($action in $page.actionList)
            <h2>Action: $action.name</h2>
            <div class="tester-form">
                <form name="form$!velocityCount" class="form" method="post" path="$!action.requestUrl" onsubmit="return false;">
                    <input type="hidden" name="paramIdList" class="paramIdList" value="$!action.remarks" />
                    <div class="item">请求地址：/report/queryUserData</div>
                    #foreach($para in $action.requestParameterList)
                    <div class="item">
                        <input type="text" width="200px" class="field" name="$!para.identifier" />&nbsp; &nbsp;变量名:
                        <font color='red'>$!para.identifier</font>&nbsp;&nbsp;变量意义:
                        <font color='gray'>$!para.name</font>&nbsp;&nbsp;备注:
                        <font color='blue'>$!para.remark</font>
                    </div>
                    #end
                    <div class="item">
                        <input type="button" class="button" value="Run"/>
                    </div>
                </form>
            </div>
            #end
        </div>
        <div class="bottom">&nbsp;</div>
        #bodyEnd
        <script>
            YUI().use('handlebars', 'node', 'event', 'jsonp', 'jsonp-url', 'json-stringify', function (Y) {
                var source = Y.one("#resBoard-template"),
                    TResBoard = Y.Handlebars.compile(source),
                    divLog = document.getElementById("divResBoardLog"),
                    ERROR = -1, WARN = -2,                                // log type
                    LIGHT_GRAY = '#999', RED = 'red', ORANGE = 'orange',  // colors
                    logLine = 1;

                log('tester initializing...');
                Y.timeLog = {};
                Y.all('.form').each(function(form) {
                    form.one('.button').on('click', function(e) {
                        Y.one('#divResBoardJson').setHTML('加载中，请稍后...');
                        var url = '',
                            qArr = [],
                            i = 0,
                            fields = form.all('.field'),
                            baseUrl = Y.one('#txtRootPath').get('value') + form.getAttribute('path');

                        fields.each(function(field) {
                            var name = field.get('name'),
                                value = field.get('value');
                            qArr[i++] = name + '=' + encodeURIComponent(value);
                        });

                        if (!~baseUrl.indexOf('http://')) {
                            baseUrl = "http://" + baseUrl;
                        }
                        url = baseUrl + '?' + qArr.join('&');
                        log('request starting, url=' + color(url, LIGHT_GRAY));
                        Y.timeLog['time'] = new Date().getTime();
                        try {

                        Y.jsonp(url, {
                            on : {
                                success : testResHandler,
                                timeout : function() {
                                    log(color('timeout', RED) + '... so long time to response!');
                                },
                                failure : function(e) {
                                    log(color('error occurred!', RED) + color(', detail:' + e.errors[0].error, LIGHT_GRAY));
                                }
                            },
                            timeout : 10000,
                            args : [form]
                        });                        
                        } catch(e) {
                        alert(e);
                    }

                    });
                });

                function testResHandler(response, form) {
                    var jsonString = Y.JSON.stringify(response); 
                    var beginTime = Y.timeLog['time'];
                    if (!beginTime) return;
                    var endTime = new Date().getTime();
                    log('request end in:' + color(endTime - beginTime, RED) + 'ms.');
                    Y.one('#divResBoardJson').setHTML(jsonString.formatJS());


                    // JSON format validating ...
                    var paramIdList = form.one('.paramIdList').get('value').split(','),
                        i, key,
                        n = paramIdList.length;
                    for (i = 0; i < n; i++) {
                        key = paramIdList[i];
                        if (!~jsonString.indexOf(key)) {
                            log('parameter [' + color(key, RED) + '] lost!', ERROR);
                        }
                    }
                }

                function log(msg, type) {
                    var arr = [],
                        i = 0;
                    arr[i++] = color(logLine++, ORANGE);
                    if (type === ERROR) {
                        arr[i++] = color('&nbsp;&nbsp;ERR!', RED)
                    }
                    arr[i++] = '&nbsp&nbsp;' + msg + "<br />";
                    arr[i++] = divLog.innerHTML;;
                    divLog.innerHTML = arr.join('');
                }

                function color(t, c) {
                    return '<span style="color:' + c + ';">' + t + '</span>';
                }

                log('tester ready.');
            });
        </script>
    </body>
</html>
